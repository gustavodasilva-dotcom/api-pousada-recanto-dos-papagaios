-----------------------------------
------- CRIAÇÃO DAS TABELAS -------
-----------------------------------

USE RECPAPAGAIOS
GO

DROP TABLE IF EXISTS HOSPEDE;
CREATE TABLE HOSPEDE
(
	HSP_ID_INT INT NOT NULL IDENTITY(1,1),
	HSP_NOME_STR VARCHAR(255),
	HSP_CPF_CHAR CHAR(11),
	HSP_DTNASC_DATE DATE,
	HSP_EMAIL_STR VARCHAR(50),
	HSP_LOGIN_CPF_CHAR CHAR(11),
	HSP_LOGIN_SENHA_STR VARCHAR(50),
	HSP_CELULAR_STR CHAR(15),
	HSP_EXCLUIDO_BIT BIT
	
	-- O ATRIBUTO EXCLUÍDO PERMITE QUE, EM VEZ DE EXCLUIR O REGISTRO, SEJA POSSÍVEL APENAS SELECIONAR OS REGISTRO QUE TENHAM COMO
	-- VALOR EM EXCLUÍDO QUALQUER COISA QUE SEJA DIFERENTE DE 1, QUE É TRUE. OU SEJA, O REGISTRO ESTÁ EXCLUÍDO? FALSE (0).

	-- PRIMARY KEY
	CONSTRAINT PK_HSP_ID_INT PRIMARY KEY(HSP_ID_INT)
);


DROP TABLE IF EXISTS ENDERECO;
CREATE TABLE ENDERECO
(
	END_ID_ENDERECO_INT INT NOT NULL IDENTITY(1,1),
	END_CEP_CHAR CHAR(8),
	END_LOGRADOURO_STR VARCHAR(255),
	END_NUMERO_CHAR VARCHAR(8),
	END_COMPLEMENTO_STR VARCHAR(255),
	END_BAIRRO_STR VARCHAR(255),
	END_CIDADE_STR VARCHAR(255),
	END_ESTADO_CHAR CHAR(2),
	END_PAIS_STR VARCHAR(255),
	END_ID_HOSPEDE_INT INT, -- "FOREIGN KEY"
	END_CPF_HOSPEDE_STR CHAR(11), -- CPF DO HÓSPEDE
	END_EXCLUIDO_BIT BIT

	-- HÁ O CPF DO HÓSPEDE COMO UM ATRIBUTO PARA QUE SEJA POSSÍVEL BUSCAR HÓSPEDES ATRAVÉS DO CPF. O SELECT É FEITO BUSCANDO
	-- UM CPF EM COMUM EM AMBAS AS TABELAS HÓSPEDE E ENDEREÇO.
	
	-- PRIMARY KEY
	CONSTRAINT PK_END_ID_ENDERECO_INT PRIMARY KEY(END_ID_ENDERECO_INT)
);


DROP TABLE IF EXISTS FNRH;
CREATE TABLE FNRH
(
	FNRH_ID_INT INT NOT NULL IDENTITY(1,1),
	FNRH_PROFISSAO_STR VARCHAR(255),
	FNRH_NACIONALIDADE_STR VARCHAR(50),
	FNRH_SEXO_CHAR CHAR(1),
	FNRH_RG_CHAR CHAR(9),
	FNRH_PROXIMO_DESTINO_STR VARCHAR(255),
	FNRH_ULTIMO_DESTINO_STR VARCHAR(255),
	FNRH_MOTIVO_VIAGEM_STR VARCHAR(255),
	FNRH_MEIO_DE_TRANSPORTE_STR VARCHAR(255),
	FNRH_PLACA_AUTOMOVEL_STR VARCHAR(255),
	FNRH_NUM_ACOMPANHANTES_INT INT,
	FNRH_HSP_ID_INT INT, -- "FOREIGN KEY"
	FNRH_CPF_HOSPEDE_STR CHAR(11), -- CPF DO HÓSPEDE
	END_EXCLUIDO_BIT BIT
	
	-- PRIMARY KEY
	CONSTRAINT PK_FNRH_ID_INT PRIMARY KEY(FNRH_ID_INT)
);


----------------------------------------------------------------


DROP TABLE IF EXISTS FUNCIONARIO;
CREATE TABLE FUNCIONARIO
(
	FUNC_ID_INT INT NOT NULL IDENTITY(1,1),
	FUNC_NOME_STR VARCHAR(255) NOT NULL,
	FUNC_CPF_CHAR CHAR(11) NOT NULL,
	FUNC_NACIONALIDADE_STR VARCHAR(50) NOT NULL,
	FUNC_DTNASC_DATE DATE NOT NULL,
	FUNC_SEXO_CHAR CHAR(1) NOT NULL,
	FUNC_RG_CHAR CHAR(9) NOT NULL,
	FUNC_CELULAR_CHAR CHAR(15) NOT NULL,
	FUNC_CARGO_STR VARCHAR(50) NOT NULL,
	FUNC_SETOR_STR VARCHAR(50) NOT NULL,
	FUNC_SALARIO_FLOAT FLOAT(2) NOT NULL,
	FUNC_EMAIL_STR VARCHAR(50) NOT NULL,
	FUNC_NOME_USUARIO_STR VARCHAR(45),
	FUNC_SENHA_USUARIO_STR VARCHAR(45),
	FUNC_CATACESSO_ID_INT INT, -- "FOREIGH KEY" CATEGORIA_ACESSO 
	FUNC_EXCLUIDO_BIT BIT
	
	-- PK
	CONSTRAINT PK_FUNC_ID_INT PRIMARY KEY(FUNC_ID_INT),
);


DROP TABLE IF EXISTS DADOSBANCARIOS;
CREATE TABLE DADOSBANCARIOS
(
	DADOSBC_ID_INT INT NOT NULL IDENTITY(1,1),
	DADOSBC_BANCO_STR VARCHAR(50) NOT NULL,
	DADOSBC_AGENCIA_STR VARCHAR(50) NOT NULL,
	DADOSBC_NUMERO_CONTA_STR VARCHAR(50) NOT NULL,
	DADOSBC_FUNCIONARIO_ID_INT INT NOT NULL, -- "FOREIGN KEY" FUNCIONARIO
	DADOSBC_FUNCIONARIO_CPF_CHAR CHAR(11) NOT NULL,
	DADOSBC_EXCLUIDO_BIT BIT
	
	--PK
	CONSTRAINT PK_DADOSBC_ID_INT PRIMARY KEY(DADOSBC_ID_INT),
);


DROP TABLE IF EXISTS CATEGORIA_ACESSO;
CREATE TABLE CATEGORIA_ACESSO
(
	CATACESSO_ID_INT INT NOT NULL IDENTITY(1, 1),
	CATACESSO_DESCRICAO_STR VARCHAR(50) NOT NULL CHECK (CATACESSO_DESCRICAO_STR IN('Recepcao', 'Administrativo')),

	-- PK
	CONSTRAINT PK_CATACESSO_ID_INT PRIMARY KEY(CATACESSO_ID_INT)
);

INSERT INTO CATEGORIA_ACESSO VALUES ('Recepcao');
INSERT INTO CATEGORIA_ACESSO VALUES ('Administrativo');