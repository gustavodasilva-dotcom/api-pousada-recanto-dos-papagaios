---------------------------------------------------------------------------------------------------------
------------------------------------------ CRIAÇÃO DAS TABELAS ------------------------------------------
---------------------------------------------------------------------------------------------------------

USE RECPAPAGAIOS
GO

DROP TABLE IF EXISTS HOSPEDE;
CREATE TABLE HOSPEDE
(
	HSP_ID_INT INT NOT NULL IDENTITY(1,1),
	HSP_NOME_STR VARCHAR(255),
	HSP_CPF_CHAR CHAR(11),
	HSP_DTNASC_DATE DATE,
	HSP_EMAIL_STR VARCHAR(50),
	HSP_LOGIN_CPF_CHAR CHAR(11),
	HSP_LOGIN_SENHA_STR VARCHAR(50),
	HSP_CELULAR_STR CHAR(13),
	HSP_EXCLUIDO_BIT BIT

	-- PRIMARY KEY
	CONSTRAINT PK_HSP_ID_INT PRIMARY KEY(HSP_ID_INT)
);


DROP TABLE IF EXISTS ENDERECO_HOSPEDE;
CREATE TABLE ENDERECO_HOSPEDE
(
	END_ID_ENDERECO_INT INT NOT NULL IDENTITY(1,1),
	END_CEP_CHAR CHAR(8),
	END_LOGRADOURO_STR VARCHAR(255),
	END_NUMERO_CHAR VARCHAR(8),
	END_COMPLEMENTO_STR VARCHAR(255),
	END_BAIRRO_STR VARCHAR(255),
	END_CIDADE_STR VARCHAR(255),
	END_ESTADO_CHAR CHAR(2),
	END_PAIS_STR VARCHAR(255),
	END_ID_HOSPEDE_INT INT, -- "FOREIGN KEY"
	END_CPF_HOSPEDE_STR CHAR(11), -- CPF DO HÓSPEDE
	END_EXCLUIDO_BIT BIT

	-- PRIMARY KEY
	CONSTRAINT PK_END_ID_ENDERECO_INT PRIMARY KEY(END_ID_ENDERECO_INT)

	-- FOREIGN KEY
	CONSTRAINT FK_END_ID_HOSPEDE_INT FOREIGN KEY(END_ID_HOSPEDE_INT)
	REFERENCES HOSPEDE(HSP_ID_INT)
);


DROP TABLE IF EXISTS FNRH;
CREATE TABLE FNRH
(
	FNRH_ID_INT INT NOT NULL IDENTITY(1,1),
	FNRH_PROFISSAO_STR VARCHAR(255),
	FNRH_NACIONALIDADE_STR VARCHAR(50),
	FNRH_SEXO_CHAR CHAR(1),
	FNRH_RG_CHAR CHAR(9),
	FNRH_PROXIMO_DESTINO_STR VARCHAR(255),
	FNRH_ULTIMO_DESTINO_STR VARCHAR(255),
	FNRH_MOTIVO_VIAGEM_STR VARCHAR(255),
	FNRH_MEIO_DE_TRANSPORTE_STR VARCHAR(255),
	FNRH_PLACA_AUTOMOVEL_STR VARCHAR(255),
	FNRH_NUM_ACOMPANHANTES_INT INT,
	FNRH_HSP_ID_INT INT, -- "FOREIGN KEY"
	FNRH_CPF_HOSPEDE_STR CHAR(11), -- CPF DO HÓSPEDE
	FNRH_EXCLUIDO_BIT BIT
	
	-- PRIMARY KEY
	CONSTRAINT PK_FNRH_ID_INT PRIMARY KEY(FNRH_ID_INT)

	-- FOREIGN KEY
	CONSTRAINT FK_HSP_ID_HOSPEDE_INT FOREIGN KEY(FNRH_HSP_ID_INT)
	REFERENCES HOSPEDE(HSP_ID_INT)
);


DROP TABLE IF EXISTS CATEGORIA_ACESSO;
CREATE TABLE CATEGORIA_ACESSO
(
	CATACESSO_ID_INT INT NOT NULL IDENTITY(1, 1),
	CATACESSO_DESCRICAO_STR VARCHAR(50) NOT NULL CHECK
	(
		CATACESSO_DESCRICAO_STR IN
		(
			'Recepcao',			-- 1
			'Administrativo'	-- 2
		)
	),

	-- PK
	CONSTRAINT PK_CATACESSO_ID_INT PRIMARY KEY(CATACESSO_ID_INT)
);

INSERT INTO CATEGORIA_ACESSO VALUES ('Recepcao');
INSERT INTO CATEGORIA_ACESSO VALUES ('Administrativo');


DROP TABLE IF EXISTS FUNCIONARIO;
CREATE TABLE FUNCIONARIO
(
	FUNC_ID_INT INT NOT NULL IDENTITY(1,1),
	FUNC_NOME_STR VARCHAR(255) NOT NULL,
	FUNC_CPF_CHAR CHAR(11) NOT NULL,
	FUNC_NACIONALIDADE_STR VARCHAR(50) NOT NULL,
	FUNC_DTNASC_DATE DATE NOT NULL,
	FUNC_SEXO_CHAR CHAR(1) NOT NULL,
	FUNC_RG_CHAR CHAR(9) NOT NULL,
	FUNC_CELULAR_CHAR CHAR(13) NOT NULL,
	FUNC_CARGO_STR VARCHAR(50) NOT NULL,
	FUNC_SETOR_STR VARCHAR(50) NOT NULL,
	FUNC_SALARIO_FLOAT FLOAT(2) NOT NULL,
	FUNC_EMAIL_STR VARCHAR(50) NOT NULL,
	FUNC_NOME_USUARIO_STR VARCHAR(45),
	FUNC_SENHA_USUARIO_STR VARCHAR(45),
	FUNC_CATACESSO_ID_INT INT, -- "FOREIGH KEY" CATEGORIA_ACESSO 
	FUNC_EXCLUIDO_BIT BIT
	
	-- PK
	CONSTRAINT PK_FUNC_ID_INT PRIMARY KEY(FUNC_ID_INT),

	-- FK
	 CONSTRAINT FK_FUNC_CATACESSO_ID_INT FOREIGN KEY(FUNC_CATACESSO_ID_INT)
	 REFERENCES CATEGORIA_ACESSO(CATACESSO_ID_INT)
);


DROP TABLE IF EXISTS ENDERECO_FUNCIONARIO;
CREATE TABLE ENDERECO_FUNCIONARIO
(
	END_FUNC_ID_ENDERECO_INT INT NOT NULL IDENTITY(1,1),
	END_FUNC_CEP_CHAR CHAR(8),
	END_FUNC_LOGRADOURO_STR VARCHAR(255),
	END_FUNC_NUMERO_CHAR VARCHAR(8),
	END_FUNC_COMPLEMENTO_STR VARCHAR(255),
	END_FUNC_BAIRRO_STR VARCHAR(255),
	END_FUNC_CIDADE_STR VARCHAR(255),
	END_FUNC_ESTADO_CHAR CHAR(2),
	END_FUNC_PAIS_STR VARCHAR(255),
	END_FUNC_ID_FUNCIONARIO_INT INT, -- "FOREIGN KEY"
	END_FUNC_CPF_HOSPEDE_STR CHAR(11), -- CPF DO HÓSPEDE
	END_FUNC_EXCLUIDO_BIT BIT

	-- PRIMARY KEY
	CONSTRAINT PK_END_ID_ENDERECO_FUNCIONARIO_INT PRIMARY KEY(END_FUNC_ID_ENDERECO_INT)

	-- FOREIGN KEY
	CONSTRAINT FK_END_ID_FUNCIONARIO_INT FOREIGN KEY(END_FUNC_ID_FUNCIONARIO_INT)
	REFERENCES FUNCIONARIO(FUNC_ID_INT)
);


DROP TABLE IF EXISTS DADOSBANCARIOS;
CREATE TABLE DADOSBANCARIOS
(
	DADOSBC_ID_INT INT NOT NULL IDENTITY(1,1),
	DADOSBC_BANCO_STR VARCHAR(50),
	DADOSBC_AGENCIA_STR VARCHAR(50),
	DADOSBC_NUMERO_CONTA_STR VARCHAR(50),
	DADOSBC_FUNCIONARIO_ID_INT INT, -- "FOREIGN KEY" FUNCIONARIO
	DADOSBC_FUNCIONARIO_CPF_CHAR CHAR(11),
	DADOSBC_EXCLUIDO_BIT BIT
	
	--PK
	CONSTRAINT PK_DADOSBC_ID_INT PRIMARY KEY(DADOSBC_ID_INT),

	--FK
	 CONSTRAINT FK_DADOSBC_FUNC_ID_INT FOREIGN KEY(DADOSBC_FUNCIONARIO_ID_INT)
	 REFERENCES FUNCIONARIO(FUNC_ID_INT)
);


DROP TABLE IF EXISTS CATEGORIA_ACOMODACAO;
CREATE TABLE CATEGORIA_ACOMODACAO
(
	CAT_ACOMOD_ID_INT INT NOT NULL IDENTITY(1, 1),
	CAT_ACOMOD_DESCRICAO_STR VARCHAR(50) NOT NULL CHECK
	(
		CAT_ACOMOD_DESCRICAO_STR IN
		(
			'Chalé Standard', -- 1
			'Chalé Superior', -- 2
			'Chalé Master'    -- 3
		)
	),

	-- PK
	CONSTRAINT PK_CAT_ACOMOD_ID_INT PRIMARY KEY(CAT_ACOMOD_ID_INT)
);

INSERT INTO CATEGORIA_ACOMODACAO VALUES ('Chalé Standard');
INSERT INTO CATEGORIA_ACOMODACAO VALUES ('Chalé Superior');
INSERT INTO CATEGORIA_ACOMODACAO VALUES ('Chalé Master');


DROP TABLE IF EXISTS INFORMACOES_ACOMODACAO;
CREATE TABLE INFORMACOES_ACOMODACAO
(
	INFO_ACOMOD_ID_INT INT NOT NULL IDENTITY(1,1),
	INFO_ACOMOD_METROS_QUADRADOS_FLOAT FLOAT(2) NOT NULL CHECK
	(
		INFO_ACOMOD_METROS_QUADRADOS_FLOAT IN
		(
			35.00,
			40.00,
			45.00 
		)
	),
	INFO_ACOMOD_CAPACIDADE_INT INT NOT NULL CHECK
	(
		INFO_ACOMOD_CAPACIDADE_INT IN
		(
			4,
			3 
		)
	),
	INFO_ACOMOD_TIPO_DE_CAMA_STR VARCHAR(255) NOT NULL CHECK
	(
		INFO_ACOMOD_TIPO_DE_CAMA_STR IN
		(
			'Double'
		)
	),
	INFO_ACOMOD_PRECO_FLOAT FLOAT(2) NOT NULL,
	INFO_ACOMOD_CAT_ACOMOD_ID_INT INT NOT NULL
	
	--PK
	CONSTRAINT PK_INFO_ACOMOD_ID_INT PRIMARY KEY(INFO_ACOMOD_ID_INT)

	--FK
	CONSTRAINT FK_INFO_ACOMOD_CAT_ACOMOD_ID_INT FOREIGN KEY(INFO_ACOMOD_CAT_ACOMOD_ID_INT)
	REFERENCES CATEGORIA_ACOMODACAO(CAT_ACOMOD_ID_INT)
);

INSERT INTO INFORMACOES_ACOMODACAO VALUES (35.00, 4, 'Double', 530.00, 1); -- Chalé Standard
INSERT INTO INFORMACOES_ACOMODACAO VALUES (40.00, 3, 'Double', 580.00, 2); -- Chalé Superior
INSERT INTO INFORMACOES_ACOMODACAO VALUES (45.00, 3, 'Double', 650.00, 3); -- Chalé Master


DROP TABLE IF EXISTS STATUS_ACOMODACAO;
CREATE TABLE STATUS_ACOMODACAO
(
	ST_ACOMOD_ID_INT INT NOT NULL IDENTITY(1,1),
	ST_ACOMOD_DESCRICAO_STR VARCHAR(50) NOT NULL CHECK
	(
		ST_ACOMOD_DESCRICAO_STR IN
		(
			'Ocupado',		-- 1
			'Iniciada',		-- 2
			'Disponível'	-- 3
		)
	)

	CONSTRAINT FK_ST_ACOMOD_ID_INT PRIMARY KEY(ST_ACOMOD_ID_INT)
);

INSERT INTO STATUS_ACOMODACAO VALUES ('Ocupado');
INSERT INTO STATUS_ACOMODACAO VALUES ('Iniciada');
INSERT INTO STATUS_ACOMODACAO VALUES ('Disponível');


DROP TABLE IF EXISTS ACOMODACAO;
CREATE TABLE ACOMODACAO
(
	ACO_ID_INT INT NOT NULL IDENTITY(1,1),
	ACO_NOME_STR VARCHAR(255) NOT NULL,
	ACO_ST_ACOMOD_INT INT NOT NULL,
	ACO_INFO_ACOMOD_ID_INT INT NOT NULL,
	ACO_EXCLUIDO_BIT BIT
	
	--PK
	CONSTRAINT PK_ACO_ID_INT PRIMARY KEY(ACO_ID_INT),
	
	--FK
	CONSTRAINT FK_ACO_INFO_ACOMOD_ID_INT FOREIGN KEY(ACO_INFO_ACOMOD_ID_INT)
	REFERENCES INFORMACOES_ACOMODACAO(INFO_ACOMOD_ID_INT),
	
	CONSTRAINT FC_ACO_ST_ACOMOD_INT FOREIGN KEY(ACO_ST_ACOMOD_INT)
	REFERENCES STATUS_ACOMODACAO(ST_ACOMOD_ID_INT)
);


DROP TABLE IF EXISTS TIPO_PAGAMENTO;
CREATE TABLE TIPO_PAGAMENTO
(
	TPPGTO_ID_INT INT NOT NULL IDENTITY(1,1),
	TPPGTO_TIPO_PAGAMENTO_STR VARCHAR(50) NOT NULL CHECK
	(
		TPPGTO_TIPO_PAGAMENTO_STR IN
		(
			'Dinheiro',					-- 1
			'Cartão de Débito',			-- 2
			'Cartão de Crédito',		-- 3
			'Transferência Bancária',	-- 4
			'Deposito Bancário',		-- 5
			'PIX'						-- 6
		)
	)
	
	--PK
	CONSTRAINT PK_TPPGTO_ID_INT PRIMARY KEY(TPPGTO_ID_INT)
);

INSERT INTO TIPO_PAGAMENTO VALUES('Dinheiro');
INSERT INTO TIPO_PAGAMENTO VALUES('Cartão de Débito');
INSERT INTO TIPO_PAGAMENTO VALUES('Cartão de Crédito');
INSERT INTO TIPO_PAGAMENTO VALUES('Transferência Bancária');
INSERT INTO TIPO_PAGAMENTO VALUES('Deposito Bancário');
INSERT INTO TIPO_PAGAMENTO VALUES('PIX');


DROP TABLE IF EXISTS STATUS_PAGAMENTO;
CREATE TABLE STATUS_PAGAMENTO
(
	ST_PGTO_ID_INT INT NOT NULL IDENTITY(1,1),
	ST_PGTO_DESCRICAO_STR VARCHAR(50) NOT NULL CHECK
	(
		ST_PGTO_DESCRICAO_STR IN
		(
			'Aprovado',			-- 1
			'Cancelado',		-- 2
			'Não Autorizado',	-- 3
			'Em Processamento'	-- 4
		)
	)

	--PK
	CONSTRAINT FK_ST_PGTO_ID_INT PRIMARY KEY(ST_PGTO_ID_INT)
);

INSERT INTO STATUS_PAGAMENTO VALUES ('Aprovado');
INSERT INTO STATUS_PAGAMENTO VALUES ('Cancelado');
INSERT INTO STATUS_PAGAMENTO VALUES ('Não Autorizado');
INSERT INTO STATUS_PAGAMENTO VALUES ('Em Processamento');


DROP TABLE IF EXISTS PAGAMENTO;
CREATE TABLE PAGAMENTO
(
	PGTO_ID_INT INT NOT NULL IDENTITY(1,1),
	PGTO_TPPGTO_ID_INT INT NOT NULL,
	PGTO_ST_PGTO_ID_INT INT NOT NULL
	
	--PK
	CONSTRAINT PK_PGTO_ID_INT PRIMARY KEY(PGTO_ID_INT)
	
	--FK
	CONSTRAINT FK_PGTO_TPPGTO_ID_INT FOREIGN KEY(PGTO_TPPGTO_ID_INT)
	REFERENCES TIPO_PAGAMENTO(TPPGTO_ID_INT),

	CONSTRAINT FK_PGTO_ST_PGTO_ID_INT FOREIGN KEY(PGTO_ST_PGTO_ID_INT)
	REFERENCES STATUS_PAGAMENTO(ST_PGTO_ID_INT)
);


DROP TABLE IF EXISTS STATUS_RESERVA;
CREATE TABLE STATUS_RESERVA
(
	ST_RES_ID_INT INT NOT NULL IDENTITY(1,1),
	ST_RES_DESCRICAO_STR VARCHAR(50) NOT NULL CHECK
	(
		ST_RES_DESCRICAO_STR IN
		(
			'Iniciada',			-- 1
			'Confirmada',		-- 2
			'Concluída'			-- 3
		)
	)

	--PK
	CONSTRAINT FK_ST_RES_ID_INT PRIMARY KEY(ST_RES_ID_INT)
);

INSERT INTO STATUS_RESERVA VALUES ('Iniciada');
INSERT INTO STATUS_RESERVA VALUES ('Confirmada');
INSERT INTO STATUS_RESERVA VALUES ('Concluída');


DROP TABLE IF EXISTS RESERVA;
CREATE TABLE RESERVA
(
	RES_ID_INT INT NOT NULL IDENTITY(1,1),
	RES_DATA_RESERVA_DATE DATE NOT NULL,
	RES_DATA_CHECKIN_DATE DATE,
	RES_DATA_CHECKOUT_DATE DATE,
	RES_VALOR_RESERVA_FLOAT FLOAT(2) NOT NULL,
	RES_STATUS_RESERVA_INT INT NOT NULL,
	RES_HSP_ID_INT INT NOT NULL,
	RES_ACO_ID_INT INT NOT NULL,
	RES_PGTO_ID_INT INT NOT NULL,
	RES_ACOMPANHANTES_ID_INT INT NOT NULL,
	RES_EXCLUIDO_BIT BIT NOT NULL
	
	--PK
	CONSTRAINT PK_RES_ID_INT PRIMARY KEY(RES_ID_INT),
	
	--FK
	CONSTRAINT FK_RES_ST_RES_ID_INT FOREIGN KEY(RES_STATUS_RESERVA_INT)
	REFERENCES STATUS_RESERVA(ST_RES_ID_INT),

	CONSTRAINT FK_HSP_HSP_ID_INT FOREIGN KEY(RES_HSP_ID_INT)
	REFERENCES HOSPEDE(HSP_ID_INT),

	CONSTRAINT FK_RES_ACO_ID_INT FOREIGN KEY(RES_ACO_ID_INT)
	REFERENCES ACOMODACAO(ACO_ID_INT),

	CONSTRAINT FK_RES_PGTO_ID_INT FOREIGN KEY(RES_PGTO_ID_INT)
	REFERENCES PAGAMENTO(PGTO_ID_INT)
);
